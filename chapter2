Глава 2. Создание личной библиотеки CD.
Запуск проекта Джанго:
Теперь, когда мы установили Джанго, мы готовы начать наш проект.
Проект в Джанго аналог веб-сайта. После того, как у нас проект готов, мы можем разместить его с помощью любого WSGI
поддерживаемого сервера. 
Подробнее о развертывании проекта Джанго позже.
django-admin.py это утилита проекта, которая поставляется с Джанго
В дополнение к startproject субкоманде, он также включает в себя много хелперов субкоманды,
которые могут быть полезны при сохранении проекта Джанго.
Заметка

Чтобы получить полный список доступных субкоманд в django-admin.py, используйте:
django-admin.py --help
Для получения справки по каждой подкоманде, используйте:
django-admin.py help <subcommand>
Например, вот результат django-admin.py help startproject:
Creates a Django project directory structure for the given project name in the current directory.
Давайте создадим проект под названием djen_project:
django-admin.py startproject djen_project
Мы можем видеть, что суб команда создает папку с именем djen_project в в рабочем каталоге со следующими файлами:
__init__.py
manage.py 
settings.py 
urls.py
__init__.py пустой файл инициирующий этот проект как модуль Python.
manage.py это скрипт, который похож на django-admin.py, который позволяет управлять этим проектом.
У него есть субкомманды, запускающие сервер разработки, взаимодействия с базой данных, резервного копирования /
восстановления данных и т.д.

Заметка
manage.py также имеет команду --help это помощь по субкомандам, такая же как в django-admin.py

Вы можете быстро запустить сервер разработки выполнив:
python manage.py runserver
Теперь откройте http://127.0.0.1:8000 в вашем браузере.

